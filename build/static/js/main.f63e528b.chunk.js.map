{"version":3,"sources":["providers/AccountContext.jsx","containers/loginContainer.jsx","localization/translate.jsx","components/login/Login.jsx","components/login/loginUi.jsx","components/login/index.jsx","components/dashboard/dashboard.jsx","components/dashboard/index.jsx","components/Authorize.jsx","localization/constants.js","localization/messages/en-US.js","localization/messages/fr-CA.js","localization/messages/index.js","localization/languageProvider.jsx","providers/CommonDataContext.jsx","components/main.jsx","App.js","reportWebVitals.js","index.js"],"names":["AccountContext","React","createContext","AccountProvider","props","useState","isAuthenticated","setIsAuth","webAuth","auth0","WebAuth","domain","process","clientID","responseType","redirectUri","audience","Provider","value","otpStart","email","Promise","resolve","reject","passwordlessStart","connection","send","authParams","lang","err","res","console","log","otpLogin","otp","passwordlessLogin","verificationCode","window","origin","location","loginWithPassword","username","password","login","realm","authResult","AuthenticateUser","idToken","accessToken","localStorage","setItem","storeUserData","data","JSON","stringify","getUserInfo","access_token","getItem","client","userInfo","children","LoginContainer","useContext","otpAvailable","isSubmitting","LoginForm","setLoginForm","isEmailError","databaseError","errorCode","LoginError","setLoginError","switchLogin","setToggle","Continue","setContinue","validateEmail","test","String","toLowerCase","onSubmit","e","a","preventDefault","description","code","getOtp","child","Children","only","cloneElement","onChange","target","name","onBlur","onToggle","onPressContinue","translate","id","values","Login","className","type","placeholder","style","border","backgroundColor","onClick","disabled","LoginUI","DashboardUI","user","parse","backgroundImage","picture","DashBoard","Authorize","useEffect","hash","parseHash","clear","idTokenPayload","sub","to","LOCALES","en","Welcome_back_to","emailAddress","signIn","choose_your_signIn_method_continue","Enter_your_email_address_so_we_can_find_your_account","or","signIn_with_password","one_time_passcode","Sign_in_with_a_onetime_passcode","continue","access_denied","too_many_attempts","Welcome_to_dashboard","invalid_request","unauthorized_client","unsupported_credential_type","blocked_user","password_leaked","fr","unsupported_credential_typ","messages","LanguageProvider","locale","textComponent","Fragment","CommonDataContext","CommonDataProvider","connections","setConn","getCommonData","axios","get","slice","strategies","Main","query","URLSearchParams","useLocation","search","useRef","culture","current","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f63e528b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport auth0 from \"auth0-js\";\n\nconst AccountContext = React.createContext({});\n\nconst AccountProvider = (props) => {\n    const [isAuthenticated, setIsAuth] = useState(false);\n\n    const AuthenticateUser = (idToken, accessToken) => {\n        localStorage.setItem(\"access_token\", accessToken);\n        localStorage.setItem(\"id_token\", idToken);\n        setIsAuth(true);\n    };\n\n    const storeUserData = (data) => {\n        localStorage.setItem(\"userData\", JSON.stringify(data));\n    };\n    const webAuth = new auth0.WebAuth({\n        domain: process.env.REACT_APP_DOMAIN,\n        clientID: process.env.REACT_APP_CLIENT_ID,\n        responseType: \"token id_token\",\n        redirectUri: \"http://localhost:3000/authorize\",\n        audience: \"https://dev-xl32ev2i.us.auth0.com/api/v2/\",\n    });\n\n    const getUserInfo = () => {\n        const access_token = localStorage.getItem(\"access_token\");\n        return new Promise((resolve, reject) => {\n            webAuth.client.userInfo(access_token, (res, err) => {\n                if (err) {\n                    console.log(err);\n                    reject(err);\n                } else {\n                    console.log(res);\n                    resolve(res);\n                }\n            });\n        });\n    };\n\n    const otpStart = (email) => {\n        return new Promise((resolve, reject) => {\n            // const variables = { email, connection: \"email\", send: \"code\" };\n            webAuth.passwordlessStart(\n                {\n                    email,\n                    connection: \"email\",\n                    send: \"code\",\n                    authParams: {\n                        lang: \"fr-ca\",\n                    },\n                },\n                (err, res) => {\n                    if (err) {\n                        console.log(err);\n                        reject(err);\n                    } else {\n                        resolve(res);\n                    }\n                }\n            );\n        });\n    };\n\n    const otpLogin = (email, otp) => {\n        return new Promise((resolve, reject) => {\n            webAuth.passwordlessLogin(\n                { email, connection: \"email\", verificationCode: otp },\n                (err, res) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        window.origin = window.location.origin;\n                        resolve(res);\n                    }\n                }\n            );\n        });\n    };\n\n    const loginWithPassword = (username, password) => {\n        return new Promise((resolve, reject) => {\n            webAuth.login(\n                {\n                    realm: \"Username-Password-Authentication\",\n                    username,\n                    password,\n                },\n                (err, authResult) => {\n                    if (err) {\n                        reject(err);\n                        return;\n                    }\n                    if (authResult) {\n                        window.origin = window.location.origin;\n                        resolve(authResult);\n                    }\n                }\n            );\n        });\n    };\n\n    return (\n        <AccountContext.Provider\n            value={{\n                webAuth,\n                otpStart,\n                otpLogin,\n                loginWithPassword,\n                AuthenticateUser,\n                storeUserData,\n                isAuthenticated,\n                getUserInfo,\n            }}\n        >\n            {props.children}\n        </AccountContext.Provider>\n    );\n};\n\nexport { AccountProvider, AccountContext };\n","import React, { useContext, useState } from \"react\";\nimport { AccountContext } from \"../providers/AccountContext\";\nexport default function LoginContainer(props) {\n    const { loginWithPassword, otpLogin, otpStart } =\n        useContext(AccountContext);\n\n    const [LoginForm, setLoginForm] = useState({\n        email: \"\",\n        password: \"\",\n        otp: \"\",\n        otpAvailable: false,\n        isSubmitting: false,\n    });\n    const [LoginError, setLoginError] = useState({\n        email: \"\",\n        isEmailError: \"\",\n        databaseError: \"\",\n        errorCode: \"\",\n    });\n    const [switchLogin, setToggle] = useState(false);\n\n    const [Continue, setContinue] = useState(false);\n\n    const onToggle = () => {\n        setToggle(!switchLogin);\n        setLoginError({\n            ...LoginError,\n            email: \"\",\n            databaseError: \"\",\n        });\n    };\n    const onPressContinue = () => {\n        setContinue(true);\n    };\n\n    const validateEmail = (email) => {\n        const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    };\n\n    const onBlur = (e) => {\n        switch (e.target.name) {\n            case \"email\":\n                if (!e.target.value) {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: true,\n                        [e.target.name]: \"Email is required\",\n                    });\n                } else if (e.target.value && !validateEmail(e.target.value)) {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: true,\n                        [e.target.name]: \"Email is not valid\",\n                    });\n                } else {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: false,\n                        [e.target.name]: \"\",\n                    });\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    const onChange = (e) => {\n        setLoginForm({\n            ...LoginForm,\n            [e.target.name]: e.target.value,\n        });\n        onBlur(e);\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (!switchLogin) {\n            try {\n                const res = await loginWithPassword(\n                    LoginForm.email,\n                    LoginForm.password\n                );\n                setLoginError({\n                    ...LoginError,\n                    databaseError: \"\",\n                });\n                console.log(res);\n            } catch (err) {\n                console.log(err);\n                setLoginError({\n                    ...LoginError,\n                    databaseError: err.description,\n                    errorCode: err.code,\n                });\n            }\n        } else {\n            try {\n                if (LoginForm.otpAvailable) {\n                    console.log(LoginForm.otp, \"otp\");\n                    const res = await otpLogin(LoginForm.email, LoginForm.otp);\n                    console.log(res, \"ankit\");\n                }\n            } catch (err) {\n                console.log(err);\n                setLoginError({\n                    ...LoginError,\n                    databaseError: err.description,\n                    errorCode: err.code,\n                });\n            }\n        }\n    };\n\n    const getOtp = async () => {\n        try {\n            setToggle(!switchLogin);\n            const res = await otpStart(LoginForm.email);\n            console.log(\"enter here\", res);\n            setLoginForm({\n                ...LoginForm,\n                otpAvailable: true,\n            });\n        } catch (err) {\n            console.log(err);\n            setLoginError({\n                ...LoginError,\n                databaseError: err.description,\n                errorCode: err.code,\n            });\n        }\n    };\n    const child = React.Children.only(props.children);\n    return React.cloneElement(child, {\n        onChange,\n        onToggle,\n        switchLogin,\n        onSubmit,\n        LoginForm,\n        LoginError,\n        Continue,\n        onPressContinue,\n        validateEmail,\n        getOtp,\n    });\n}\n","import React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nconst translate = (id, value = {}) => (\n    <FormattedMessage id={id} values={{ ...value }} />\n);\n\nexport default translate;\n","import React from \"react\";\nimport \"./style.css\";\nimport translate from \"../../localization/translate\";\n\nconst Login = (props) => {\n    const {\n        onChange,\n        switchLogin,\n        onSubmit,\n        LoginError,\n        LoginForm,\n        onToggle,\n        Continue,\n        onPressContinue,\n        validateEmail,\n        getOtp,\n    } = props;\n\n    return (\n        <div className=\"LoginWrapperContainer\">\n            <form className=\"InputWrapper\">\n                {!switchLogin && (\n                    <>\n                        <div className=\"InputContainer\">\n                            <div className=\"InputLabel\">\n                                {translate(\"emailAddress\")}\n                            </div>\n                            <input\n                                type=\"email\"\n                                id=\"email\"\n                                name=\"email\"\n                                value={LoginForm.email}\n                                placeholder=\"johndoe@domain.com\"\n                                className=\"Input\"\n                                onChange={onChange}\n                                style={{\n                                    border:\n                                        LoginError.isEmailError === true\n                                            ? \"2px solid red\"\n                                            : LoginError.isEmailError === false\n                                            ? \"2px solid green\"\n                                            : \"\",\n                                    backgroundColor: \"#ffff\",\n                                }}\n                            />\n                        </div>\n                    </>\n                )}\n                {LoginError.email && (\n                    <div className=\"Error\">{LoginError.email}</div>\n                )}\n                {Continue && !switchLogin && (\n                    <>\n                        <div className=\"InputContainer\">\n                            <div className=\"InputLabel\">\n                                {translate(\"password\")}\n                            </div>\n                            <input\n                                type=\"password\"\n                                id=\"password\"\n                                name=\"password\"\n                                placeholder=\"********\"\n                                className=\"Input\"\n                                onChange={onChange}\n                            />\n                        </div>\n                    </>\n                )}\n                {Continue && switchLogin && LoginForm.otpAvailable && (\n                    <>\n                        <div className=\"InputContainer\">\n                            <div className=\"InputLabel\">\n                                {translate(\"one_time_passcode\")}\n                            </div>\n                            <input\n                                id=\"otp\"\n                                name=\"otp\"\n                                className=\"Input\"\n                                onChange={onChange}\n                            />\n                        </div>\n                    </>\n                )}\n                {!Continue && (\n                    <button\n                        className=\"RequestOtp\"\n                        onClick={onPressContinue}\n                        disabled={!validateEmail(LoginForm.email)}\n                        style={{\n                            backgroundColor: !validateEmail(LoginForm.email)\n                                ? \"grey\"\n                                : \"\",\n                        }}\n                    >\n                        <div>{translate(\"continue\")}</div>\n                    </button>\n                )}\n\n                {Continue && (\n                    <button className=\"RequestOtp\" onClick={onSubmit}>\n                        {/* {!switchLogin ? (\n                            <div>Sign in</div>\n                        ) : LoginForm.otpAvailable ? (\n                            <div>Sign in</div>\n                        ) : (\n                            <div>Request one-time passcode</div>\n                        )} */}\n                        <div>{translate(\"signIn\")}</div>\n                    </button>\n                )}\n            </form>\n            {LoginError.errorCode && (\n                <div className=\"Error\">{translate(LoginError.errorCode)}</div>\n            )}\n            {Continue && (\n                <div className=\"SwitchContainer\">\n                    <div className=\"Switch\">{translate(\"or\")}</div>\n                    {/* <button className=\"SwitchBtn\" onClick={onToggle}>\n                        {!switchLogin ? (\n                            <div>Sign in with a one-time passcode</div>\n                        ) : (\n                            <div>Sign in with password</div>\n                        )}\n                    </button> */}\n                    {!switchLogin && (\n                        <button className=\"SwitchBtn\" onClick={getOtp}>\n                            <div>\n                                {translate(\"Sign_in_with_a_onetime_passcode\")}\n                            </div>\n                        </button>\n                    )}\n                    {switchLogin && (\n                        <button className=\"SwitchBtn\" onClick={onToggle}>\n                            <div>{translate(\"signIn_with_password\")}</div>\n                        </button>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\nimport \"./style.css\";\nimport Login from \"./Login\";\nimport translate from \"../../localization/translate\";\nconst LoginUI = (props) => {\n    const {\n        onChange,\n        switchLogin,\n        onToggle,\n        onSubmit,\n        LoginError,\n        LoginForm,\n        Continue,\n        onPressContinue,\n        validateEmail,\n        getOtp,\n    } = props;\n\n    return (\n        <>\n            <div className=\"LoginContainer\">\n                <div className=\"LeftWrapper\">\n                    <div className=\"WelcomeContainer\">\n                        <div className=\"Logo\">McAfee</div>\n                        <div className=\"Intro\">\n                            {translate(\"Welcome_back_to\")} McAfee !\n                        </div>\n                        {Continue ? (\n                            <div className=\"IntroSubHeading\">\n                                {translate(\n                                    \"choose_your_signIn_method_continue\"\n                                )}\n                            </div>\n                        ) : (\n                            <div className=\"IntroSubHeading\">\n                                {translate(\n                                    \"Enter_your_email_address_so_we_can_find_your_account\"\n                                )}\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className=\"RightWrapper\">\n                    <Login\n                        LoginError={LoginError}\n                        onChange={onChange}\n                        switchLogin={switchLogin}\n                        onSubmit={onSubmit}\n                        LoginForm={LoginForm}\n                        onToggle={onToggle}\n                        onPressContinue={onPressContinue}\n                        Continue={Continue}\n                        validateEmail={validateEmail}\n                        getOtp={getOtp}\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default LoginUI;\n","import React from \"react\";\nimport LoginContainer from \"../../containers/loginContainer\";\nimport LoginUI from \"./loginUi\";\n\nconst Login = (props) => {\n    return (\n        <LoginContainer {...props}>\n            <LoginUI />\n        </LoginContainer>\n    );\n};\nexport default Login;\n","import React from \"react\";\nimport \"./style.css\";\nimport translate from \"../../localization/translate\";\nconst DashboardUI = () => {\n    const user = JSON.parse(localStorage.getItem(\"userData\"));\n\n    return (\n        <>\n            <div className=\"DashboardContainer\">\n                <div className=\"DashBoardHeading\">\n                    {translate(\"Welcome_to_dashboard\")}{\" \"}\n                </div>\n                <div\n                    className=\"UserImg\"\n                    style={{ backgroundImage: `url(${user?.picture})` }}\n                ></div>\n                <div className=\"UserName\">{user.name}</div>\n            </div>\n        </>\n    );\n};\nexport default DashboardUI;\n","import React from \"react\";\n\nimport DashboardUI from \"./dashboard\";\nconst DashBoard = (props) => {\n    return <DashboardUI />;\n};\nexport default DashBoard;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AccountContext } from \"../providers/AccountContext\";\n\nconst Authorize = () => {\n    const { isAuthenticated, storeUserData, AuthenticateUser, webAuth } =\n        useContext(AccountContext);\n\n    const parseAuthToken = () => {\n        if (window.location.hash) {\n            webAuth.parseHash({ hash: window.location.hash }, (err, res) => {\n                if (err) {\n                    console.log(err);\n                    localStorage.clear();\n                    return;\n                }\n\n                const { email, name, picture, sub: id } = res.idTokenPayload;\n                storeUserData({ email, name, picture, id });\n                AuthenticateUser(res.idToken, res.accessToken);\n            });\n        }\n    };\n    useEffect(() => {\n        parseAuthToken();\n    }, []);\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n    return <div>Loading....</div>;\n};\n\nexport default Authorize;\n","export const LOCALES = {\n    ENGLISH: \"en-us\",\n    GERMAN: \"de-de\",\n    FRENCH: \"fr-ca\",\n};\n","import { LOCALES } from \"../constants\";\n\nconst en = {\n    [LOCALES.ENGLISH]: {\n        Welcome_back_to: \"Welcome back to\",\n        emailAddress: \"Email Address\",\n        password: \"Password\",\n        signIn: \"sign in\",\n        choose_your_signIn_method_continue:\n            \"Choose your sign in method to continue\",\n        Enter_your_email_address_so_we_can_find_your_account:\n            \"Enter your email address so we can find your account.\",\n        or: \"or\",\n        signIn_with_password: \"sign in with password\",\n        one_time_passcode: \"one-time passcode\",\n        Sign_in_with_a_onetime_passcode: \"sign in with one-time passcode\",\n        continue: \"continue\",\n        access_denied: \"Wrong email or password.\",\n        too_many_attempts:\n            \" Your account has been blocked after multiple consecutive login attempts. We’ve sent you an email with instructions on how to unblock it.\",\n        Welcome_to_dashboard: \"Welcome to Dashboard\",\n        invalid_request:\n            \" Invalid request body. All and only of client_id, credential_type, username, otp, realm are required.\",\n        unauthorized_client: \"Cross origin login not allowed.\",\n        unsupported_credential_type: \" Unknown credential type parameter.\",\n        blocked_user: \"blocked user\",\n        password_leaked:\n            \"This login attempt has been blocked because the password you're using was previously disclosed through a data breach \",\n    },\n};\nexport default en;\n","import { LOCALES } from \"../constants\";\n\nconst fr = {\n    [LOCALES.FRENCH]: {\n        Welcome_back_to: \"Bon retour à\",\n        emailAddress: \"Adresse e-mail\",\n        password: \"le mot de passe\",\n        signIn: \"s'identifier\",\n        choose_your_signIn_method_continue:\n            \"Choisissez votre méthode de connexion pour continuer\",\n        Enter_your_email_address_so_we_can_find_your_account:\n            \"Entrez votre adresse e-mail afin que nous puissions trouver votre compte.\",\n        Sign_in_with_a_onetime_passcode:\n            \"Connectez-vous avec un code d'accès à usage unique\",\n        or: \"ou\",\n        signIn_with_password: \"se connecter avec mot de passe\",\n        one_time_passcode: \"code d'accès à usage unique\",\n        continue: \"Continuez\",\n        access_denied: \"Mauvaise adresse de messagerie ou mot de passe.\",\n        too_many_attempts:\n            \"Votre compte a été bloqué après plusieurs tentatives de connexion consécutives. Nous vous avons envoyé un e-mail avec des instructions sur la façon de le débloquer\",\n        Welcome_to_dashboard: \"bienvenue au tableau de bord\",\n        invalid_request:\n            \"Corps de requête non valide. Tous et uniquement client_id, type d'identification, nom d'utilisateur, otp, domaine sont requis\",\n        unauthorized_client: \"Connexion d'origine croisée non autorisée.\",\n        unsupported_credential_typ: \"Paramètre de type d'identifiant inconnu.\",\n        blocked_user: \"utilisateur bloqué\",\n        password_leaked:\n            \"Cette tentative de connexion a été bloquée car le mot de passe que vous utilisez a déjà été divulgué suite à une violation de données\",\n    },\n};\nexport default fr;\n","import en from \"./en-US\";\nimport fr from \"./fr-CA\";\n\nconst messages = {\n    ...en,\n    ...fr,\n};\nexport default messages;\n","import React, { Fragment } from \"react\";\nimport { IntlProvider } from \"react-intl\";\n\nimport messages from \"./messages\";\n\nconst LanguageProvider = ({ children, locale }) => (\n    <IntlProvider\n        textComponent={Fragment}\n        locale={locale}\n        messages={messages[locale]}\n    >\n        {children}\n    </IntlProvider>\n);\nexport default LanguageProvider;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst CommonDataContext = React.createContext({});\n\nconst CommonDataProvider = (props) => {\n    const [connections, setConn] = useState([]);\n    useEffect(() => {\n        const getCommonData = async () => {\n            const res = await axios.get(\n                \"/client/9dR6Ug2BQQbmBMp6grHf1R962NBigRxg.js?t1634713429698\"\n            );\n            const data = JSON.parse(res.data.slice(16, -2));\n            console.log(data.strategies);\n            setConn(data.strategies);\n        };\n\n        getCommonData();\n    }, []);\n    return (\n        <CommonDataContext.Provider value={{ connections }}>\n            {props.children}\n        </CommonDataContext.Provider>\n    );\n};\n\nexport { CommonDataProvider, CommonDataContext };\n","import React, { useRef } from \"react\";\nimport Login from \"./login/index\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport DashBoard from \"./dashboard/index\";\nimport { AccountProvider } from \"../providers/AccountContext\";\nimport Authorize from \"./Authorize\";\nimport LanguageProvider from \"../localization/languageProvider\";\nimport { LOCALES } from \"../localization/constants\";\nimport { CommonDataProvider } from \"../providers/CommonDataContext\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\nconst Main = () => {\n    let query = useQuery();\n    let locale = useRef(\"\");\n    let lang;\n    let culture = query.get(\"culture\");\n\n    if (culture === null) {\n        if (localStorage.getItem(\"lang\") === null) {\n            lang = \"en-us\";\n        } else {\n            lang = localStorage.getItem(\"lang\");\n        }\n    } else {\n        lang = culture;\n        localStorage.setItem(\"lang\", lang);\n    }\n\n    if (lang === \"en-us\") {\n        locale.current = LOCALES.ENGLISH;\n    } else if (lang === \"fr-ca\") {\n        locale.current = LOCALES.FRENCH;\n    } else {\n        locale.current = \"en-us\";\n    }\n    return (\n        <CommonDataProvider>\n            <LanguageProvider locale={locale.current}>\n                <AccountProvider>\n                    <Switch>\n                        <Route exact path=\"/\" component={Login} />\n                        <Route exact path=\"/authorize\" component={Authorize} />\n                        <Route exact path=\"/dashboard\" component={DashBoard} />\n                    </Switch>\n                </AccountProvider>\n            </LanguageProvider>\n        </CommonDataProvider>\n    );\n};\nexport default Main;\n","import Main from \"./components/main\";\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Main />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}