{"version":3,"sources":["providers/AccountContext.jsx","containers/loginContainer.jsx","components/login/Login.jsx","components/login/loginUi.jsx","components/login/index.jsx","components/dashboard/dashboard.jsx","components/dashboard/index.jsx","components/Authorize.jsx","components/main.jsx","App.js","reportWebVitals.js","index.js"],"names":["AccountContext","React","createContext","AccountProvider","props","useState","isAuthenticated","setIsAuth","webAuth","auth0","WebAuth","domain","process","clientID","responseType","redirectUri","Provider","value","otpStart","email","Promise","resolve","reject","variables","connection","send","passwordlessStart","err","res","console","log","otpLogin","otp","passwordlessLogin","verificationCode","window","origin","location","loginWithPassword","username","password","login","realm","authResult","AuthenticateUser","authToken","localStorage","setItem","storeUserData","data","JSON","stringify","children","LoginContainer","useContext","otpAvailable","isSubmitting","LoginForm","setLoginForm","isEmailError","databaseError","LoginError","setLoginError","switchLogin","setToggle","Continue","setContinue","validateEmail","test","String","toLowerCase","onSubmit","e","a","preventDefault","description","child","Children","only","cloneElement","onChange","target","name","onBlur","onToggle","onPressContinue","Login","className","type","id","placeholder","style","border","onClick","disabled","backgroundColor","LoginUI","DashboardUI","user","parse","getItem","backgroundImage","picture","DashBoard","Authorize","useEffect","hash","parseHash","clear","idTokenPayload","sub","idToken","to","Main","exact","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bb25efe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport auth0 from \"auth0-js\";\n\nconst AccountContext = React.createContext({});\n\nconst AccountProvider = (props) => {\n    const [isAuthenticated, setIsAuth] = useState(false);\n\n    const AuthenticateUser = (authToken) => {\n        localStorage.setItem(\"auth_token\", authToken);\n        setIsAuth(true);\n    };\n\n    const storeUserData = (data) => {\n        localStorage.setItem(\"userData\", JSON.stringify(data));\n    };\n    const webAuth = new auth0.WebAuth({\n        domain: process.env.REACT_APP_DOMAIN,\n        clientID: process.env.REACT_APP_CLIENT_ID,\n        responseType: \"token id_token\",\n        redirectUri: \"http://localhost:3000/authorize\",\n    });\n\n    const otpStart = (email) => {\n        return new Promise((resolve, reject) => {\n            const variables = { email, connection: \"email\", send: \"code\" };\n            webAuth.passwordlessStart(variables, (err, res) => {\n                if (err) {\n                    console.log(err);\n                    reject(err);\n                } else {\n                    resolve(res);\n                }\n            });\n        });\n    };\n\n    const otpLogin = (email, otp) => {\n        return new Promise((resolve, reject) => {\n            webAuth.passwordlessLogin(\n                { email, connection: \"email\", verificationCode: otp },\n                (err, res) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        window.origin = window.location.origin;\n                        resolve(res);\n                    }\n                }\n            );\n        });\n    };\n\n    const loginWithPassword = (username, password) => {\n        return new Promise((resolve, reject) => {\n            webAuth.login(\n                {\n                    realm: \"Username-Password-Authentication\",\n                    username,\n                    password,\n                },\n                (err, authResult) => {\n                    if (err) {\n                        reject(err);\n                        return;\n                    }\n                    if (authResult) {\n                        window.origin = window.location.origin;\n                        resolve(authResult);\n                    }\n                }\n            );\n        });\n    };\n\n    return (\n        <AccountContext.Provider\n            value={{\n                webAuth,\n                otpStart,\n                otpLogin,\n                loginWithPassword,\n                AuthenticateUser,\n                storeUserData,\n                isAuthenticated,\n            }}\n        >\n            {props.children}\n        </AccountContext.Provider>\n    );\n};\n\nexport { AccountProvider, AccountContext };\n","import React, { useContext, useState } from \"react\";\nimport { AccountContext } from \"../providers/AccountContext\";\nexport default function LoginContainer(props) {\n    const { loginWithPassword, otpLogin, otpStart } =\n        useContext(AccountContext);\n\n    const [LoginForm, setLoginForm] = useState({\n        email: \"\",\n        password: \"\",\n        otp: \"\",\n        otpAvailable: false,\n        isSubmitting: false,\n    });\n    const [LoginError, setLoginError] = useState({\n        email: \"\",\n        isEmailError: \"\",\n        databaseError: \"\",\n    });\n    const [switchLogin, setToggle] = useState(false);\n\n    const [Continue, setContinue] = useState(false);\n\n    const onToggle = () => {\n        setToggle(!switchLogin);\n        setLoginError({\n            ...LoginError,\n            email: \"\",\n            databaseError: \"\",\n        });\n    };\n    const onPressContinue = () => {\n        setContinue(true);\n    };\n\n    const validateEmail = (email) => {\n        const re =\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    };\n\n    const onBlur = (e) => {\n        switch (e.target.name) {\n            case \"email\":\n                if (!e.target.value) {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: true,\n                        [e.target.name]: \"Email is required\",\n                    });\n                } else if (e.target.value && !validateEmail(e.target.value)) {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: true,\n                        [e.target.name]: \"Email is not valid\",\n                    });\n                } else {\n                    setLoginError({\n                        ...LoginError,\n                        isEmailError: false,\n                        [e.target.name]: \"\",\n                    });\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    const onChange = (e) => {\n        setLoginForm({\n            ...LoginForm,\n            [e.target.name]: e.target.value,\n        });\n        onBlur(e);\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (!switchLogin) {\n            try {\n                const res = await loginWithPassword(\n                    LoginForm.email,\n                    LoginForm.password\n                );\n                setLoginError({\n                    ...LoginError,\n                    databaseError: \"\",\n                });\n                console.log(res);\n            } catch (err) {\n                console.log(err);\n                setLoginError({\n                    ...LoginError,\n                    databaseError: err.description,\n                });\n            }\n        } else {\n            try {\n                if (LoginForm.otpAvailable) {\n                    console.log(LoginForm.otp, \"otp\");\n                    const res = await otpLogin(LoginForm.email, LoginForm.otp);\n                    console.log(res, \"ankit\");\n                } else {\n                    const res = await otpStart(LoginForm.email);\n                    console.log(\"enter here\", res);\n                    setLoginForm({\n                        ...LoginForm,\n                        otpAvailable: true,\n                    });\n                }\n            } catch (err) {\n                console.log(err);\n                setLoginError({\n                    ...LoginError,\n                    databaseError: err.description,\n                });\n            }\n        }\n    };\n\n    const child = React.Children.only(props.children);\n    return React.cloneElement(child, {\n        onChange,\n        onToggle,\n        switchLogin,\n        onSubmit,\n        LoginForm,\n        LoginError,\n        Continue,\n        onPressContinue,\n        validateEmail,\n    });\n}\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Login = (props) => {\n    const {\n        onChange,\n        switchLogin,\n        onSubmit,\n        LoginError,\n        LoginForm,\n        onToggle,\n        Continue,\n        onPressContinue,\n        validateEmail,\n    } = props;\n\n    return (\n        <div className=\"LoginWrapperContainer\">\n            <form className=\"InputWrapper\">\n                <div className=\"InputLabel\">Email Address</div>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    name=\"email\"\n                    value={LoginForm.email}\n                    placeholder=\"johndoe@domain.com\"\n                    className=\"Input\"\n                    onChange={onChange}\n                    style={{\n                        border:\n                            LoginError.isEmailError === true\n                                ? \"2px solid red\"\n                                : LoginError.isEmailError === false\n                                ? \"2px solid green\"\n                                : \"\",\n                    }}\n                />\n                {LoginError.email && (\n                    <div className=\"Error\">{LoginError.email}</div>\n                )}\n                {Continue && !switchLogin && (\n                    <>\n                        <div className=\"InputLabel\">Password</div>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"********\"\n                            className=\"Input\"\n                            onChange={onChange}\n                        />\n                    </>\n                )}\n                {Continue && switchLogin && LoginForm.otpAvailable && (\n                    <>\n                        <div className=\"InputLabel\">one-time passcode</div>\n                        <input\n                            id=\"otp\"\n                            name=\"otp\"\n                            className=\"Input\"\n                            onChange={onChange}\n                        />\n                    </>\n                )}\n                {!Continue && (\n                    <button\n                        className=\"RequestOtp\"\n                        onClick={onPressContinue}\n                        disabled={!validateEmail(LoginForm.email)}\n                        style={{\n                            backgroundColor: !validateEmail(LoginForm.email)\n                                ? \"grey\"\n                                : \"\",\n                        }}\n                    >\n                        <div>Continue</div>\n                    </button>\n                )}\n\n                {Continue && (\n                    <button className=\"RequestOtp\" onClick={onSubmit}>\n                        {!switchLogin ? (\n                            <div>Sign in</div>\n                        ) : LoginForm.otpAvailable ? (\n                            <div>Sign in</div>\n                        ) : (\n                            <div>Request one-time passcode</div>\n                        )}\n                    </button>\n                )}\n            </form>\n            <div className=\"Error\">{LoginError.databaseError}</div>\n            {Continue && (\n                <div className=\"SwitchContainer\">\n                    <div className=\"Switch\">OR</div>\n                    <button className=\"SwitchBtn\" onClick={onToggle}>\n                        {!switchLogin ? (\n                            <div>Sign in with a one-time passcode</div>\n                        ) : (\n                            <div>Sign in with password</div>\n                        )}\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\nimport \"./style.css\";\nimport Login from \"./Login\";\nconst LoginUI = (props) => {\n    const {\n        onChange,\n        switchLogin,\n        onToggle,\n        onSubmit,\n        LoginError,\n        LoginForm,\n        Continue,\n        onPressContinue,\n        validateEmail,\n    } = props;\n\n    return (\n        <>\n            <div className=\"LoginContainer\">\n                <div className=\"LeftWrapper\">\n                    <div className=\"WelcomeContainer\">\n                        <div className=\"Logo\">McAfee</div>\n                        <div className=\"Intro\">Welcome back to McAfee !</div>\n                        {Continue ? (\n                            <div className=\"IntroSubHeading\">\n                                Choose your sign in method to continue.\n                            </div>\n                        ) : (\n                            <div className=\"IntroSubHeading\">\n                                Enter your email address so we can find your\n                                account.\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className=\"RightWrapper\">\n                    <Login\n                        LoginError={LoginError}\n                        onChange={onChange}\n                        switchLogin={switchLogin}\n                        onSubmit={onSubmit}\n                        LoginForm={LoginForm}\n                        onToggle={onToggle}\n                        onPressContinue={onPressContinue}\n                        Continue={Continue}\n                        validateEmail={validateEmail}\n                    />\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default LoginUI;\n","import React from \"react\";\nimport LoginContainer from \"../../containers/loginContainer\";\nimport LoginUI from \"./loginUi\";\n\nconst Login = (props) => {\n    return (\n        <LoginContainer {...props}>\n            <LoginUI />\n        </LoginContainer>\n    );\n};\nexport default Login;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst DashboardUI = () => {\n    const user = JSON.parse(localStorage.getItem(\"userData\"));\n\n    return (\n        <>\n            <div className=\"DashboardContainer\">\n                <div className=\"DashBoardHeading\">Welcome to DashBoard... </div>\n                <div\n                    className=\"UserImg\"\n                    style={{ backgroundImage: `url(${user?.picture})` }}\n                ></div>\n                <div className=\"UserName\">{user.name}</div>\n            </div>\n        </>\n    );\n};\nexport default DashboardUI;\n","import React from \"react\";\n\nimport DashboardUI from \"./dashboard\";\nconst DashBoard = (props) => {\n    return <DashboardUI />;\n};\nexport default DashBoard;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AccountContext } from \"../providers/AccountContext\";\n\nconst Authorize = () => {\n    const { isAuthenticated, storeUserData, AuthenticateUser, webAuth } =\n        useContext(AccountContext);\n\n    const parseAuthToken = () => {\n        if (window.location.hash) {\n            webAuth.parseHash({ hash: window.location.hash }, (err, res) => {\n                if (err) {\n                    console.log(err);\n                    localStorage.clear();\n                    return;\n                }\n\n                const { email, name, picture, sub: id } = res.idTokenPayload;\n                storeUserData({ email, name, picture, id });\n                AuthenticateUser(res.idToken);\n            });\n        }\n    };\n    useEffect(() => {\n        parseAuthToken();\n    }, []);\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n    return <div>Loading....</div>;\n};\n\nexport default Authorize;\n","import React from \"react\";\nimport Login from \"./login/index\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport DashBoard from \"./dashboard/index\";\nimport { AccountProvider } from \"../providers/AccountContext\";\nimport Authorize from \"./Authorize\";\n\nconst Main = () => {\n    return (\n        <BrowserRouter>\n            <AccountProvider>\n                <Switch>\n                    <Route exact path=\"/\" component={Login} />\n                    <Route exact path=\"/authorize\" component={Authorize} />\n                    <Route exact path=\"/dashboard\" component={DashBoard} />\n                </Switch>\n            </AccountProvider>\n        </BrowserRouter>\n    );\n};\nexport default Main;\n","import Main from \"./components/main\";\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Main />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}